{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Programa\\xE7\\xE3o\\\\Cubos\\\\M\\xF3dulo 02\\\\Frontend\\\\cubos-flix\\\\src\\\\componentes\\\\Movies\\\\index.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/jsx-pascal-case */\nimport React, { useState } from \"react\";\nimport './style.css';\nimport Movies from './Dados/filmes';\nimport Filtro from './Filtros/index';\nimport Card_Movie from './Card/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Filmes(props) {\n  _s();\n\n  const [filmes, setFilme] = useState(Movies);\n  const [filtroCategoria, setFiltroCategoria] = useState([]);\n\n  function AlterarEstadoFavorito(tituloFilme) {\n    const novosFilmes = [...filmes];\n    const filme = novosFilmes.find(filme => filme.title === tituloFilme);\n    filme.isStarred = !filme.isStarred;\n    setFilme(novosFilmes);\n  }\n\n  function RetornarInfoFilme(top) {\n    let list_film;\n\n    if (top) {\n      list_film = filmes.slice(0, 5).map(filme => /*#__PURE__*/_jsxDEV(Card_Movie, {\n        title: filme.title,\n        backgroundImg: filme.backgroundImg,\n        starsCount: filme.starsCount,\n        price: filme.price,\n        categories: filme.categories,\n        isStarred: filme.isStarred,\n        AlterarEstadoFavorito: AlterarEstadoFavorito\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this));\n    } else {\n      list_film = filtragemFilme(filmes).map(filme => /*#__PURE__*/_jsxDEV(Card_Movie, {\n        title: filme.title,\n        backgroundImg: filme.backgroundImg,\n        starsCount: filme.starsCount,\n        price: filme.price,\n        categories: filme.categories,\n        isStarred: filme.isStarred,\n        AlterarEstadoFavorito: AlterarEstadoFavorito\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this));\n    }\n\n    return list_film;\n  }\n\n  function filtragemFilme(filme) {\n    if (filtroCategoria.length === 0) return filme;\n    if (filtroCategoria.length > 0 && filtroCategoria.some(c => filme.categories.includes(c))) return filme;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filmes\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"txt-filmes\",\n      children: \"Top Filmes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-conteudo\",\n      children: RetornarInfoFilme(\"s\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"txt-filmes\",\n      children: \"Filmes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Filtro, {\n      filtroCategoria: filtroCategoria,\n      setFiltroCategoria: setFiltroCategoria\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filmes-conteudo\",\n      children: RetornarInfoFilme()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Filmes, \"Q91fKNtQv8Rem2FMvvgxR0mL2Sk=\");\n\n_c = Filmes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filmes\");","map":{"version":3,"sources":["C:/Users/gabri/OneDrive/Área de Trabalho/Programação/Cubos/Módulo 02/Frontend/cubos-flix/src/componentes/Movies/index.js"],"names":["React","useState","Movies","Filtro","Card_Movie","Filmes","props","filmes","setFilme","filtroCategoria","setFiltroCategoria","AlterarEstadoFavorito","tituloFilme","novosFilmes","filme","find","title","isStarred","RetornarInfoFilme","top","list_film","slice","map","backgroundImg","starsCount","price","categories","filtragemFilme","length","some","c","includes"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-pascal-case */\r\nimport React, {useState} from \"react\";\r\n\r\nimport './style.css';\r\n\r\nimport Movies from  './Dados/filmes';\r\nimport Filtro from './Filtros/index';\r\nimport Card_Movie from './Card/index';\r\n\r\n\r\n\r\nexport default function Filmes(props)\r\n{    \r\n    \r\n    const [filmes, setFilme] = useState(Movies);\r\n    const [filtroCategoria, setFiltroCategoria] = useState([]);    \r\n    \r\n    function AlterarEstadoFavorito(tituloFilme)\r\n    {\r\n        const novosFilmes = [...filmes];\r\n\r\n        const filme = novosFilmes.find(filme => filme.title === tituloFilme);\r\n        filme.isStarred = !filme.isStarred\r\n        \r\n        setFilme(novosFilmes);\r\n    }\r\n\r\n    function RetornarInfoFilme(top)\r\n    {\r\n        let list_film;\r\n        \r\n        if(top)\r\n        {\r\n            list_film = filmes.slice(0,5).map(filme => \r\n                (\r\n                    <Card_Movie             \r\n                    title = {filme.title}\r\n                    backgroundImg = {filme.backgroundImg}\r\n                    starsCount = {filme.starsCount}\r\n                    price = {filme.price}\r\n                    categories = {filme.categories}\r\n                    isStarred = {filme.isStarred}\r\n                    AlterarEstadoFavorito = {AlterarEstadoFavorito}\r\n                    />\r\n                )\r\n            )\r\n        }\r\n        else\r\n        {\r\n            list_film = filtragemFilme(filmes).map(filme => \r\n                (\r\n                    <Card_Movie             \r\n                    title = {filme.title}\r\n                    backgroundImg = {filme.backgroundImg}\r\n                    starsCount = {filme.starsCount}\r\n                    price = {filme.price}\r\n                    categories = {filme.categories}\r\n                    isStarred = {filme.isStarred}\r\n                    AlterarEstadoFavorito = {AlterarEstadoFavorito}\r\n                    />\r\n                )\r\n            )\r\n        }\r\n        return list_film\r\n    }\r\n    \r\n    function filtragemFilme(filme)\r\n    {\r\n        if(filtroCategoria.length === 0) return filme;\r\n\r\n        if(filtroCategoria.length > 0 && filtroCategoria.some(c => filme.categories.includes(c))) return filme;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = \"filmes\">       \r\n            <h3 className=\"txt-filmes\">Top Filmes</h3>            \r\n            <div className=\"top-conteudo\">\r\n                {RetornarInfoFilme(\"s\")}\r\n            </div>\r\n\r\n            <h3 className=\"txt-filmes\">Filmes</h3>\r\n            <Filtro \r\n                filtroCategoria={filtroCategoria}\r\n                setFiltroCategoria ={setFiltroCategoria} \r\n            />\r\n            <div className=\"filmes-conteudo\">\r\n                {RetornarInfoFilme()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Programa\\xE7\\xE3o\\\\Cubos\\\\M\\xF3dulo 02\\\\Frontend\\\\cubos-flix\\\\src\\\\componentes\\\\Movies\\\\index.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/jsx-pascal-case */\nimport React, { useState } from \"react\";\nimport './style.css';\nimport Movies from './Dados/filmes';\nimport Filtro from './Filtros/index';\nimport Card_Movie from './Card/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RetornarInfoFilme(top) {\n  _s();\n\n  let list_film;\n  const [filmes, setFilme] = useState(Movies);\n  const [filtroCategoria, setFiltroCategoria] = useState([]);\n\n  function AlterarEstadoFavorito(tituloFilme) {\n    const novosFilmes = [...filmes];\n    const filme = novosFilmes.find(filme => filme.title === tituloFilme);\n    filme.isStarred = !filme.isStarred;\n    setFilme(novosFilmes);\n  }\n\n  if (top) {\n    list_film = filmes.slice(0, 5).map(filme => /*#__PURE__*/_jsxDEV(Card_Movie, {\n      title: filme.title,\n      backgroundImg: filme.backgroundImg,\n      starsCount: filme.starsCount,\n      price: filme.price,\n      categories: filme.categories,\n      isStarred: filme.isStarred,\n      AlterarEstadoFavorito: AlterarEstadoFavorito\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this));\n  } else {\n    list_film = filmes.map(filme => /*#__PURE__*/_jsxDEV(Card_Movie, {\n      title: filme.title,\n      backgroundImg: filme.backgroundImg,\n      starsCount: filme.starsCount,\n      price: filme.price,\n      categories: filme.categories,\n      isStarred: filme.isStarred,\n      AlterarEstadoFavorito: AlterarEstadoFavorito\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this));\n  }\n\n  return list_film;\n}\n\n_s(RetornarInfoFilme, \"Q91fKNtQv8Rem2FMvvgxR0mL2Sk=\");\n\n_c = RetornarInfoFilme;\nexport default function Filmes(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filmes\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"txt-filmes\",\n      children: \"Top Filmes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-conteudo\",\n      children: RetornarInfoFilme(\"s\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"txt-filmes\",\n      children: \"Filmes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Filtro, {\n      filtroCategoria: filtroCategoria,\n      setFiltroCategoria: setFiltroCategoria\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filmes-conteudo\",\n      children: RetornarInfoFilme()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_c2 = Filmes;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RetornarInfoFilme\");\n$RefreshReg$(_c2, \"Filmes\");","map":{"version":3,"sources":["C:/Users/gabri/OneDrive/Área de Trabalho/Programação/Cubos/Módulo 02/Frontend/cubos-flix/src/componentes/Movies/index.js"],"names":["React","useState","Movies","Filtro","Card_Movie","RetornarInfoFilme","top","list_film","filmes","setFilme","filtroCategoria","setFiltroCategoria","AlterarEstadoFavorito","tituloFilme","novosFilmes","filme","find","title","isStarred","slice","map","backgroundImg","starsCount","price","categories","Filmes","props"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAO,aAAP;AAEA,OAAOC,MAAP,MAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,SAASC,iBAAT,CAA2BC,GAA3B,EACA;AAAA;;AACI,MAAIC,SAAJ;AAEA,QAAM,CAACC,MAAD,EAASC,QAAT,IAAqBR,QAAQ,CAACC,MAAD,CAAnC;AACA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,EAAD,CAAtD;;AAEA,WAASW,qBAAT,CAA+BC,WAA/B,EACA;AACI,UAAMC,WAAW,GAAG,CAAC,GAAGN,MAAJ,CAApB;AAEA,UAAMO,KAAK,GAAGD,WAAW,CAACE,IAAZ,CAAiBD,KAAK,IAAIA,KAAK,CAACE,KAAN,KAAgBJ,WAA1C,CAAd;AACAE,IAAAA,KAAK,CAACG,SAAN,GAAkB,CAACH,KAAK,CAACG,SAAzB;AAEAT,IAAAA,QAAQ,CAACK,WAAD,CAAR;AACH;;AAED,MAAGR,GAAH,EACA;AACIC,IAAAA,SAAS,GAAGC,MAAM,CAACW,KAAP,CAAa,CAAb,EAAe,CAAf,EAAkBC,GAAlB,CAAsBL,KAAK,iBAE/B,QAAC,UAAD;AACA,MAAA,KAAK,EAAIA,KAAK,CAACE,KADf;AAEA,MAAA,aAAa,EAAIF,KAAK,CAACM,aAFvB;AAGA,MAAA,UAAU,EAAIN,KAAK,CAACO,UAHpB;AAIA,MAAA,KAAK,EAAIP,KAAK,CAACQ,KAJf;AAKA,MAAA,UAAU,EAAIR,KAAK,CAACS,UALpB;AAMA,MAAA,SAAS,EAAIT,KAAK,CAACG,SANnB;AAOA,MAAA,qBAAqB,EAAIN;AAPzB;AAAA;AAAA;AAAA;AAAA,YAFI,CAAZ;AAaH,GAfD,MAiBA;AACIL,IAAAA,SAAS,GAAGC,MAAM,CAACY,GAAP,CAAWL,KAAK,iBAEpB,QAAC,UAAD;AACA,MAAA,KAAK,EAAIA,KAAK,CAACE,KADf;AAEA,MAAA,aAAa,EAAIF,KAAK,CAACM,aAFvB;AAGA,MAAA,UAAU,EAAIN,KAAK,CAACO,UAHpB;AAIA,MAAA,KAAK,EAAIP,KAAK,CAACQ,KAJf;AAKA,MAAA,UAAU,EAAIR,KAAK,CAACS,UALpB;AAMA,MAAA,SAAS,EAAIT,KAAK,CAACG,SANnB;AAOA,MAAA,qBAAqB,EAAIN;AAPzB;AAAA;AAAA;AAAA;AAAA,YAFI,CAAZ;AAaH;;AACD,SAAOL,SAAP;AACH;;GAlDQF,iB;;KAAAA,iB;AAqDT,eAAe,SAASoB,MAAT,CAAgBC,KAAhB,EACf;AAEI,sBACI;AAAK,IAAA,SAAS,EAAG,QAAjB;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACKrB,iBAAiB,CAAC,GAAD;AADtB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI,QAAC,MAAD;AACI,MAAA,eAAe,EAAEK,eADrB;AAEI,MAAA,kBAAkB,EAAGC;AAFzB;AAAA;AAAA;AAAA;AAAA,YAPJ,eAUI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBACKN,iBAAiB;AADtB;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;MAnBuBoB,M","sourcesContent":["/* eslint-disable react/jsx-pascal-case */\r\nimport React, {useState} from \"react\";\r\n\r\nimport './style.css';\r\n\r\nimport Movies from  './Dados/filmes';\r\nimport Filtro from './Filtros/index';\r\nimport Card_Movie from './Card/index';\r\n\r\nfunction RetornarInfoFilme(top)\r\n{\r\n    let list_film;\r\n    \r\n    const [filmes, setFilme] = useState(Movies);\r\n    const [filtroCategoria, setFiltroCategoria] = useState([]);\r\n    \r\n    function AlterarEstadoFavorito(tituloFilme)\r\n    {\r\n        const novosFilmes = [...filmes];\r\n\r\n        const filme = novosFilmes.find(filme => filme.title === tituloFilme);\r\n        filme.isStarred = !filme.isStarred\r\n        \r\n        setFilme(novosFilmes);\r\n    }\r\n    \r\n    if(top)\r\n    {\r\n        list_film = filmes.slice(0,5).map(filme => \r\n            (\r\n                <Card_Movie             \r\n                title = {filme.title}\r\n                backgroundImg = {filme.backgroundImg}\r\n                starsCount = {filme.starsCount}\r\n                price = {filme.price}\r\n                categories = {filme.categories}\r\n                isStarred = {filme.isStarred}\r\n                AlterarEstadoFavorito = {AlterarEstadoFavorito}\r\n                />\r\n            )\r\n        )\r\n    }\r\n    else\r\n    {\r\n        list_film = filmes.map(filme => \r\n            (\r\n                <Card_Movie             \r\n                title = {filme.title}\r\n                backgroundImg = {filme.backgroundImg}\r\n                starsCount = {filme.starsCount}\r\n                price = {filme.price}\r\n                categories = {filme.categories}\r\n                isStarred = {filme.isStarred}\r\n                AlterarEstadoFavorito = {AlterarEstadoFavorito}\r\n                />\r\n            )\r\n        )\r\n    }\r\n    return list_film\r\n}\r\n\r\n\r\nexport default function Filmes(props)\r\n{    \r\n    \r\n    return (\r\n        <div className = \"filmes\">       \r\n            <h3 className=\"txt-filmes\">Top Filmes</h3>            \r\n            <div className=\"top-conteudo\">\r\n                {RetornarInfoFilme(\"s\")}\r\n            </div>\r\n\r\n            <h3 className=\"txt-filmes\">Filmes</h3>\r\n            <Filtro \r\n                filtroCategoria={filtroCategoria}\r\n                setFiltroCategoria ={setFiltroCategoria} />\r\n            <div className=\"filmes-conteudo\">\r\n                {RetornarInfoFilme()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}